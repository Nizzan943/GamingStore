@using Microsoft.AspNetCore.Identity
@using GamingStore.Data
@model GamingStore.ViewModels.Items.GetItemsViewModel
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject GamingStoreContext GamingStoreContext

@{
    ViewData["Title"] = "Index";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/css/product_styles.css">
</head>

<div class="shop">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <form asp-controller="Items" asp-action="Search">
                    <div><strong>Filter by Category:</strong></div>
                    @foreach (var category in Model.Categories)
                    {
                        <input type="checkbox" id="category" name="category" value=@category>
                        <label for=@category>@category</label><br>
                    }

                    <div><strong>Filter by Brand:</strong></div>
                    @foreach (var brand in Model.Brands)
                    {
                        <input type="checkbox" id="brands" name="brands" value=@brand>
                        <label for=@brand>@brand</label><br>
                    }

                    @{var maxPrice = 0.0;}
                    @foreach (var item in Model.PaginatedItems)
                    {
                        if (item.Price > maxPrice)
                        {
                            maxPrice = item.Price;
                        }
                    }

                    <div><strong>Filter by Price:</strong></div>
                    <input type="range" id="price" name="price" min="0" max=@maxPrice value=@maxPrice>
                    <div>
                        <input type="submit" value="Search" style="width: 100%">
                    </div>
                </form>
            </div>

            <div class="col-lg-9">
                <!-- Shop Content -->
                <div class="shop_content">

                    <div class="product_grid">
                        @{ foreach (var item in Model.PaginatedItems)
                            { <!-- Product Item -->
                                <div class="product_item">
                                    <div class="product_image ">
                                        <a href="/Items/Details?id=@item.Id">
                                            <img src="/@item.ImageUrl/1.jpg" alt="">
                                        </a>
                                    </div>
                                    <div class="product_content">
                                        <div class="product_price">@Html.DisplayFor(m => item.Price)</div>
                                        <div class="product_name">
                                            <a asp-action="Details" asp-route-id="@item.Id" tabindex="0" style="overflow-wrap: break-word">@item.Title</a>
                                        </div>
                                    </div>
                                </div> } }
                    </div>

                    <div class="paging-btns">
                        @{ var prevDisabled = !Model.PaginatedItems.HasPreviousPage ? "disabled" : "";
                            var nextDisabled = !Model.PaginatedItems.HasNextPage ? "disabled" : ""; }

                   
                         
                    </div>
                </div>
            </div>
        </div>
    </div>
    @section Scripts {
        <script src="~/js/products_index.js"></script>
    }